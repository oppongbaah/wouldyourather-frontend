{"version":3,"sources":["Components/NavBar.js","App.js","reportWebVitals.js","redux/reducers/rdUsers.js","redux/reducers/rdPolls.js","redux/store.js","index.js","redux/actionCreators/acUsers.js","redux/middlewares/mwUsers.js","redux/actionCreators/acPolls.js","redux/middlewares/mwPolls.js","redux/actions.js"],"names":["cookies","Cookies","connect","state","authedUser","users","name","avatarURL","url","payload","data","dispatch","dispatch_authedUser","user","dispatch_fetchUsers","fetchUsers","dispatch_fetchPoll","fetchPoll","props","useEffect","get","image","imageURL","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","to","pathname","role","aria-haspopup","aria-labelledby","desc","src","alt","Home","lazy","Dashboard","NewPoll","Leaderboard","Login","Logout","Signup","QuestionDetails","Results","Error404","override","css","App","fallback","color","loading","size","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","status","userReducer","action","actions","avatar","vote","option","btnStatus","addedQuestion","message","rootReducer","combineReducers","polls","question","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","applyMiddleware","ReduxThunk","store","createStore","ReactDOM","render","StrictMode","document","getElementById","loadUser","getAuthedUser","api","actionCreators","axios","catch","err","console","log","trim","login","credentials","a","fetch","method","headers","json","error","signup","history","body","JSON","stringify","text","alert","set","_id","push","loadPoll","addQuestion","sortedPolls","map","poll","sort","x","y","timestamp","e","pid","uid","put","getBtnStatus","post","res","GET_POLL","GET_USER","AUTHED_USER","VOTE","BTN_STATUS","ADD_POLL"],"mappings":"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","file":"static/js/main.c2c56776.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {NavLink, Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport '../styles/App.css';\nimport Cookies from 'universal-cookie';\nimport {IoMdArrowDropdown} from 'react-icons/io';\nimport {authedUser, fetchUsers} from '../redux/middlewares/mwUsers';\nimport {fetchPoll} from '../redux/middlewares/mwPolls';\n\nconst cookies = new Cookies();\n\nfunction Navigation(props){\n\n  /* eslint-disable */\n  useEffect(() => {\n    if(cookies.get(\"authedUser\")) {\n      props.dispatch_authedUser(cookies.get(\"authedUser\"));\n    }\n  }, [])\n\n  useEffect(() => {\n    props.dispatch_fetchUsers();\n  }, [])\n\n  useEffect(() => {\n    props.dispatch_fetchPoll();\n  }, [])\n  /* eslint-enable */\n\n  const image = props.avatarURL;\n\n  const imageURL = image ? `/usersAvatar/${image}` \n  : '/usersAvatar/avatar.png';\n \n  return (\n    <>\n      <div className=\"container-nav\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n    \n        <nav id=\"navbarSupportedContent\" className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n\n          <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto topnav\">\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    exact to=\"/dashboard\">\n                    Dashboard\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to={{\n                      pathname: \"/add\",\n                      state: \"authorised\"\n                    }}>\n                    New Poll\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to={{\n                      pathname: \"/leaderboard\",\n                      state: \"authorised\"\n                    }}>\n                    Leaderboard\n                  </NavLink>\n                </li>\n\n                <li className=\"dropd\">\n                  <div className=\"nav-item dropdown\">  \n                    <p className=\"nav-link dropdown-toggle\" \n                      id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" \n                      aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {props.authedUser}<IoMdArrowDropdown />   \n                    </p>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <div className=\"dropdown-divider\"></div>\n                            <Link className=\"dropdown-item\"\n                              to={{\n                                pathname:'/users/login',\n                                state: {desc:'sign in'}  \n                                }}>\n                              Sign In\n                            </Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link className=\"dropdown-item\"\n                          to={{\n                            pathname:'/users/signup',\n                            state: {desc:'sign up'}  \n                            }}>\n                          Sign Up\n                        </Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link className=\"dropdown-item\"\n                          to={{\n                            pathname:'/users/logout',\n                            state: {desc:'sign out'}  \n                            }}>\n                          Sign Out\n                        </Link>\n                    </div>\n                  </div>\n                </li>\n                {\n                  cookies.get(\"authedUser\") &&\n                    <li className=\"image\" >\n                      <img src={imageURL} alt=\"avatar\" />\n                    </li>\n                }\n              </ul>\n              <div>\n              </div>\n          </div>\n        </nav>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    authedUser: state.users.authedUser.name,\n    avatarURL: state.users.authedUser.url,\n    users: state.users.payload.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch_authedUser: (user) => dispatch(authedUser(user)),\n    dispatch_fetchUsers: () => dispatch(fetchUsers()),\n    dispatch_fetchPoll: () => dispatch(fetchPoll())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import {Component, Suspense, lazy} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './styles/App.css';\nimport { css } from \"@emotion/react\";\nimport {DotLoader} from \"react-spinners\";\nimport Navigation from './Components/NavBar';\n\n// import components using the lazy method from the react library\nconst Home = lazy(() => import('./Components/Home'));\nconst Dashboard = lazy(() => import('./Components/Dashboard'));\nconst NewPoll = lazy(() => import('./Components/NewPoll'));\nconst Leaderboard = lazy(() => import('./Components/Leaderboard'));\nconst Login = lazy(() => import('./Components/Login'));\nconst Logout = lazy(() => import('./Components/Logout'));\nconst Signup = lazy(() => import('./Components/Signup'));\nconst QuestionDetails = lazy(() => import('./Components/QuestionDetails'));\nconst Results = lazy(() => import('./Components/Results'));\nconst Error404 = lazy(() => import('./Components/404Error'));\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\ndisplay: block;\nmargin: 20% auto;\nborder-color: tomato;\n`;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Router>\n        <Navigation />\n          <Suspense fallback={<DotLoader color={\"tomato\"} loading={true} css={override} size={60} />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/add\" component={NewPoll}/>\n              <Route path=\"/leaderboard\" component={Leaderboard}/>\n              <Route path=\"/users/login\" component={Login}/>\n              <Route path=\"/users/logout\" component={Logout}/>\n              <Route path=\"/users/signup\" component={Signup}/>\n              <Route path=\"/questions/:id/unanswered\" component={QuestionDetails} />\n              <Route path=\"/questions/:id/recommended\" component={QuestionDetails} />\n              <Route path=\"/questions/:id/answered\" component={Results} />\n              <Route component={Error404} />\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from '../actions';\r\n\r\nconst initialState = {\r\n    payload : {data:[], status:\"\"},\r\n    authedUser: {name:\"\", url:\"\", status:\"\"}\r\n}\r\n\r\nfunction userReducer(state=initialState, action){\r\n    switch(action.type){\r\n        case actions.GET_USER:\r\n            return {...state, payload:\r\n                 {\r\n                     data: action.payload.users,\r\n                     status: action.payload.status\r\n                 }\r\n            }\r\n        case actions.AUTHED_USER:\r\n            return {...state, authedUser:\r\n                {\r\n                    name: action.payload.name,\r\n                    url: action.payload.avatar,\r\n                    status: action.payload.status\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport default userReducer;","import * as actions from '../actions';\n\nconst initialState = {\n    payload : {data:[], status:''},\n    vote: {data:[], status:'', option: ''},\n    btnStatus: \"recommended\",\n    addedQuestion: {data:{}, status:'', message:''}\n}\n\nfunction pollReducer(state = initialState, action){\n    switch(action.type){\n        case actions.GET_POLL:\n            return {...state, payload:\n                {\n                    data: action.payload.polls,\n                    status: action.payload.status\n                }\n            }\n        case actions.VOTE:\n            return {...state, vote: \n                {\n                    data: action.payload.question,\n                    status: action.payload.status,\n                    option: action.payload.option\n                }\n            }\n        case actions.BTN_STATUS:\n            return {...state, btnStatus: action.status}\n        case actions.ADD_POLL:\n            return {...state, addedQuestion:\n                {\n                    data: action.payload.question,\n                    status: action.payload.status,\n                    message: action.payload.message\n                }\n            }\n        default:\n            return state;\n    }\n} \n\nexport {\n    pollReducer\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport userReducer from './reducers/rdUsers';\r\nimport {pollReducer} from './reducers/rdPolls';\r\nimport ReduxThunk from 'redux-thunk';\r\n// import logger from 'redux-logger';\r\n\r\nconst rootReducer = combineReducers({\r\n    users: userReducer,\r\n    polls: pollReducer\r\n});\r\n\r\nconst composeEnhancers =\r\ntypeof window === 'object' &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    trace: true, traceLimit: 25\r\n}) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(ReduxThunk)\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n  \r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as actions from '../actions';\r\n\r\nexport function loadUser(users, status) {\r\n    return {\r\n        type: actions.GET_USER,\r\n        payload: {\r\n            users,\r\n            status\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAuthedUser(name, avatar, status) {\r\n    return {\r\n        type: actions.AUTHED_USER,\r\n        payload: {\r\n            name,\r\n            avatar,\r\n            status\r\n        }\r\n    }\r\n}\r\n","import * as actionCreators from '../actionCreators/acUsers';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst api = 'https://wouldyouratherapplication.herokuapp.com';\r\n\r\nexport function fetchUsers() {\r\n    return (dispatch => {\r\n        try {\r\n            dispatch(actionCreators.loadUser([], \"loading\"));\r\n    \r\n            axios.get(`${api}/users/fetch-all`)\r\n            .then(users => {\r\n                dispatch(actionCreators.loadUser(users.data, \"done\"));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(actionCreators.loadUser([], \"failed\"));\r\n            })\r\n        }\r\n        catch (err){\r\n            console.log(err);\r\n        }\r\n    })\r\n}\r\n\r\nexport function authedUser(user) {\r\n    return (dispatch => {\r\n        try {\r\n            dispatch(actionCreators.getAuthedUser(\"\", \"\", \"logging\"));\r\n    \r\n            if (user === \"Guest\") {\r\n                dispatch(actionCreators.getAuthedUser(user, \"\", \"done\"));\r\n            }\r\n            else {\r\n                axios.get(`${api}/users/fetch/${user.trim()}`)\r\n                .then(authedUser => {\r\n                    dispatch(actionCreators.getAuthedUser(user, authedUser.data.imageURL, \"done\"))\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        }\r\n        catch (err){\r\n            console.log(err);\r\n            dispatch(actionCreators.getAuthedUser(\"\", \"\", \"failed\"));\r\n        }\r\n    })\r\n}\r\n\r\nexport async function login(credentials) {\r\n    try {\r\n        return await fetch(`${api}/users/login`, {\r\n          method: 'POST',\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": api,\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Basic ${credentials}`\r\n          }\r\n        })\r\n        .then(data => data.json())\r\n        .catch(err => console.log(err))\r\n    }\r\n    catch (e) {console.error(e)}\r\n}\r\n\r\nexport async function signup(credentials, history) {\r\n    try {\r\n        return fetch(`${api}/users/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(credentials)\r\n            })\r\n            .then(data => {\r\n                data.text().then(text => {\r\n                    alert(text);\r\n                    cookies.set(\"authedUser\", credentials._id);\r\n                    history.push(\"/\");\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    catch (e) {console.error(e)}\r\n}","import * as actions from '../actions';\n\nexport function loadPoll(polls, status) {\n    return {\n        type: actions.GET_POLL,\n        payload: {\n            polls,\n            status\n        }\n    }\n}\n\nexport function vote(question, status, option) {\n    return {\n        type: actions.VOTE,\n        payload: {\n            question,\n            status,\n            option\n        }\n    }\n}\n\nexport function setBtnStatus(status) {\n    return {\n        type: actions.BTN_STATUS,\n        status\n    }\n}\n\nexport function addQuestion(question, status, message) {\n    return {\n        type: actions.ADD_POLL,\n        payload: {\n            question,\n            status,\n            message\n        }\n    }\n}","import * as actionCreators from '../actionCreators/acPolls';\nimport axios from 'axios';\n\nconst api = 'https://wouldyouratherapplication.herokuapp.com';\n\nexport function fetchPoll() {\n    return (dispatch => {\n        try {\n            dispatch(actionCreators.loadPoll([], \"loading\"));\n    \n            axios.get(`${api}/polls/fetch-all`)\n            .then(polls => {\n                let data = polls.data;\n                // sort the polls in descending order of the timestamp\n                const sortedPolls = data.map(poll => poll).sort((x, y) =>\n                    x.timestamp < y.timestamp ? 1 : -1);\n\n                dispatch(actionCreators.loadPoll(sortedPolls, \"done\"));\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(actionCreators.loadPoll([], \"failed\"))\n            })\n        }\n        catch (e) {console.error(e)}\n    })\n}\n\nexport function getQuestion(qid) {\n    try {\n        axios.get(`${api}/polls/fetch/${qid.trim()}`)\n        .then((poll) => {\n            console.log(poll.data)\n            return poll.data;\n        })\n        .catch((err) => console.log(err))\n    }\n    catch (e) {console.error(e)}\n}\n\nexport function vote(pid, uid, option) {\n    return (dispatch => {        \n        try {\n            dispatch(actionCreators.vote([], \"voting\", \"\"));   \n            axios.put(`${api}/polls/vote/${pid}/${uid}?option=${option}`)\n            .then((question) => {\n                dispatch(actionCreators.vote(question.data, \"voted\", option));\n            })\n            .catch((err) => {\n                dispatch(actionCreators.vote([], \"already voted\", \"\"));\n            })\n        }\n        catch (e) {console.error(e)}\n    })\n}\n\nexport function getBtnStatus(status) {\n    return (dispatch => {\n        try {\n            dispatch(actionCreators.setBtnStatus(status));\n        }\n        catch (err) {console.log(err)}\n    })\n}\n\nexport function addQuestion(question) {\n    return(dispatch => {\n        try {\n            dispatch(actionCreators.addQuestion({}, 'adding', ''));\n\n            axios.post(`${api}/polls/add`, question)\n            .then((res) => {\n                dispatch(actionCreators.addQuestion(res.data.question,\n                    'added', res.data.message));\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch(actionCreators.addQuestion({}, 'failed', \n                    'Error Adding Question'));\n            })\n        }\n        catch (e) {console.log(e)}\n    })\n}","export const GET_POLL = \"poll/get\";\r\nexport const GET_USER = \"user/get\";\r\nexport const AUTHED_USER = \"user/authed\";\r\nexport const VOTE = 'question/vote';\r\nexport const BTN_STATUS = 'button/status';\r\nexport const ADD_POLL = 'poll/add';"],"sourceRoot":""}